// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/scalent-io/orchestration-framework/internal/middleware"
	"github.com/scalent-io/orchestration-framework/pkg/db/sqlx"
	"github.com/scalent-io/orchestration-framework/services/wallet/repo"
	"github.com/scalent-io/orchestration-framework/services/wallet/service"
	"github.com/scalent-io/orchestration-framework/services/wallet/web"
)

// Injectors from wire.go:

func initServer(config2 *WalletConfig) (*web.UserHandlerRegistry, error) {
	serverConfig := config2.Server
	loggerConfig := config2.Logger
	middlewareImpl, err := middleware.NewMiddlewareImpl()
	if err != nil {
		return nil, err
	}
	dbConfig := config2.DB
	db, err := sqlx.NewSqlDB(dbConfig)
	if err != nil {
		return nil, err
	}
	walletRepoImpl, err := repo.NewWalletRepoImpl(db)
	if err != nil {
		return nil, err
	}
	walletServiceImpl, err := service.NewWalletServiceImpl(walletRepoImpl)
	if err != nil {
		return nil, err
	}
	userHandlerRegistryOptions := web.UserHandlerRegistryOptions{
		Config:        serverConfig,
		Logg:          loggerConfig,
		Middleware:    middlewareImpl,
		WalletService: walletServiceImpl,
	}
	userHandlerRegistry := web.NewUserHandlerRegistry(userHandlerRegistryOptions)
	return userHandlerRegistry, nil
}

// wire.go:

var UserModuleSet = wire.NewSet(wire.FieldsOf(new(*WalletConfig), "server", "db", "logger", "middleware"), sqlx.NewSqlDB, wire.Struct(new(web.UserHandlerRegistryOptions), "*"), web.NewUserHandlerRegistry, middleware.NewMiddlewareImpl, wire.Bind(new(middleware.Middleware), new(*middleware.MiddlewareImpl)), repo.NewWalletRepoImpl, wire.Bind(new(service.WalletRepo), new(*repo.WalletRepoImpl)), service.NewWalletServiceImpl, wire.Bind(new(service.WalletService), new(*service.WalletServiceImpl)))
